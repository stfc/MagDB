#!/usr/bin/env python2.6
# coding=utf8
import csv
import sys
import psycopg2
import MySQLdb
import string
from socket import gethostbyname
from socket import gethostbyname_ex
from socket import gethostbyaddr
import datetime
import prettytable
import argparse
import json
import ConfigParser

config = ConfigParser.ConfigParser()
config.read(['/etc/magdb/magdb.conf'])

CS = config.get("database", "psycopg2")
PAKITI2_HOST = config.get("pakiti", "host")
PAKITI2_USER = config.get("pakiti", "user")
PAKITI2_PASSWORD = config.get("pakiti", "password")
PAKITI2_DBNAME = config.get("pakiti", "database")
INFO_TEXT = "Checked %d records, following errors found:"

def main():
    parser = argparse.ArgumentParser()
    parser.add_argument("--format", dest="format", action="store", choices=["html", "json"], help="Output format")
    args = parser.parse_known_args()[0]

    table = prettytable.PrettyTable(["FQDN", "IP", "Only In", "Last Seen"])

    master_list = {}

    # Get list from magDB
    try:
        conn=psycopg2.connect(CS)
    except:
        print 'Error: Unable to connect to magDB database!'
        print sys.exc_info()[1]
        return False

    #selecting all hostnames with their ips from magDB
    cur = conn.cursor()
    cur.execute("""SELECT name || '.' || "domainName", ha."ipAddress", "lastSeen" FROM hostnames h, domains d, "hostAddresses" ha LEFT JOIN "ipSurvey" i on i."ipAddress" = ha."ipAddress" WHERE h."domainId" = d.id AND h."hostAddressId" = ha.id""")
    magdb_list = cur.fetchall()
    conn.commit()
    cur.close()
    conn.close()
    del cur
    del conn

    for n, i, l in magdb_list:
        k = "%s;%s" % (n, i)

        if l is not None:
            if l > datetime.datetime.today() - datetime.timedelta(1):
                l = "Today"
            else:
                l = l.strftime("%Y-%m-%d %H:%M:%S")

            if k not in master_list:
                master_list[k] = ""
            master_list[k] += "MagDB;%s" % l


    # Get list from pakiti
    try:
        conn=MySQLdb.connect(PAKITI2_HOST, PAKITI2_USER, PAKITI2_PASSWORD, PAKITI2_DBNAME)
    except:
        print 'Error: Unable to connect to Pakiti database!'
        print sys.exc_info()[1]
        return False

    #selecting all hostnames with their ips from pakiti
    cur = conn.cursor()
    cur.execute("""SELECT host, report_ip, time FROM host""")
    pakiti_list = cur.fetchall()
    conn.commit()
    cur.close()
    conn.close()
    del cur
    del conn

    for n, i, d in pakiti_list:
        k = "%s;%s" % (n, i)
        if k in master_list:
            del master_list[k]
        else:
            master_list[k] = "Pakiti;%s" % d

    for k, v in master_list.iteritems():
        table.add_row(k.split(";") + v.split(";"))

    if args.format == "html":
        print('<!DOCTYPE HTML><html lang="en"><head><title>MagDB - Pakiti Inconsistencies</title><link rel="stylesheet" type="text/css" href="info.css"><link rel="icon" href="favicon.png" type="image/png"></head><body>')
        print('<div class="head"><h1>MagDB - Pakiti Inconsistencies as of %s</h1></div>' % datetime.datetime.now())
        print (("<h2>"+INFO_TEXT+"</h2>") % (len(magdb_list)))
        table.print_html()
        print("</body></html>");
    elif args.format == "json":
        print(json.dumps({"aoColumns" : table.fields, "aaData" : table.rows}))
    else:
        print("MagDB - Pakiti Inconsistencies as of %s" % datetime.datetime.now())
        print (INFO_TEXT % (len(magdb_list)))
        table.printt(sortby="FQDN")

if __name__ == "__main__":
    main()
